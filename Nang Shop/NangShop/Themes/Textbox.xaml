<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style TargetType="{x:Type TextBox}">
        <!--<Setter Property="KeyboardNavigation.TabNavigation" Value="None" />-->
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="#FFFFFF"/>
        <Setter Property="Foreground" Value="#373A3D"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="11.5"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <!--<Setter Property="Padding" Value="4" />-->
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="#B9B9B9" />
        <Setter Property="SelectionBrush" Value="#FFFFB762"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="MinHeight" Value="21"/>
        <!--<Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimation Storyboard.TargetName="bdHover" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="00:00:0.3"/>
                        </Storyboard>

                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimation Storyboard.TargetName="bdHover" Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="00:00:0.3"/>
                        </Storyboard>

                        <Storyboard x:Key="FocusOn">
                            <DoubleAnimation Storyboard.TargetName="bdFocus" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="00:00:0.3"/>
                        </Storyboard>

                        <Storyboard x:Key="FocusOff">
                            <DoubleAnimation Storyboard.TargetName="bdFocus" Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="00:00:0.3"/>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0" UseLayoutRounding="True" />
                        <Border x:Name="bdHover" Background="#F0F0F0" BorderBrush="Transparent" 
                                BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0" UseLayoutRounding="True" Opacity="0"/>
                        <Border x:Name="bdFocus" Background="Transparent" BorderBrush="#F78A09" 
                                BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0" UseLayoutRounding="True" Opacity="0"/>
                        <Label HorizontalAlignment="Left" VerticalAlignment="Top" Padding="5,2,0,0" Foreground="Gray" FontStyle="Italic"
                               Content="{TemplateBinding Tag}" x:Name="lbl" Opacity="0" HorizontalContentAlignment="Center"/>
                        <ScrollViewer Margin="3,3,0,0" x:Name="PART_ContentHost" Foreground="#000000" UseLayoutRounding="True" 
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <!--<Setter TargetName="border" Property="Background" Value="#F0F0F0"/>-->
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}"/>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <!--<Setter TargetName="border" Property="BorderBrush" Value="#F78A09"/>-->
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource FocusOn}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource FocusOff}"/>
                            </Trigger.ExitActions>
                            <Setter TargetName="PART_ContentHost"  Property="FocusManager.FocusedElement" Value="{Binding ElementName=PART_ContentHost}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False"> 
                            <Setter TargetName="border" Property="Background" Value="#FFE9E9E9"/>
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#F0F0F0"/>
                        </Trigger>
                        <Trigger Property="Text" Value="">
                            <Setter TargetName="lbl" Property="Opacity" Value="1"/>
                        </Trigger>
                        <Trigger Property="Text" Value="{x:Null}">
                            <Setter TargetName="lbl" Property="Opacity" Value="1"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Height" Value="45">
                <Setter Property="TextWrapping" Value="Wrap"/>
                <Setter Property="AcceptsReturn" Value="True"/>
            </Trigger>
            <!--<Trigger Property="TextWrapping" Value="Wrap">
                <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            </Trigger>-->
            <!--<DataTrigger Binding="{Binding IsKeyboardFocused, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <Grid>
                                <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                                        BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0" UseLayoutRounding="True" />
                                <Label HorizontalAlignment="Left" VerticalAlignment="Top" Padding="5,3,0,0" Foreground="Gray" FontStyle="Italic"
                                       Content="{TemplateBinding Tag}" x:Name="lbl" Opacity="0" HorizontalContentAlignment="Center"/>
                                <TextBlock Text="{TemplateBinding Text}" TextTrimming="CharacterEllipsis" VerticalAlignment="Center"/>
                            </Grid>
                            <ControlTemplate.Triggers>                               
                                <Trigger Property="Text" Value="">
                                    <Setter TargetName="lbl" Property="Opacity" Value="1"/>
                                </Trigger>
                                <Trigger Property="Text" Value="{x:Null}">
                                    <Setter TargetName="lbl" Property="Opacity" Value="1"/>
                                </Trigger>

                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>-->
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type RichTextBox}" TargetType="{x:Type RichTextBox}">
        <!--<Style.Resources>
            <Style x:Key="{x:Type FlowDocument}" TargetType="{x:Type FlowDocument}">
                <Setter Property="OverridesDefaultStyle" Value="true"/>
            </Style>
        </Style.Resources>-->
    </Style>
    
    <Style x:Key="RichTextBoxCell" TargetType="{x:Type RichTextBox}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#373A3D"/>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="#FFF"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>