<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
                    x:Class="NangShop.Themes.DataGrid">

    <!--style phụ trợ, giúp datagrid có thể co giãn độ rộng các cột-->
    <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Width" Value="8"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="SizeWE"/>
        <Setter Property="Padding" Value="3,0,3,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <EventSetter Event="MouseLeave" Handler="Thumb_MouseLeave"/>
        <EventSetter Event="MouseEnter" Handler="Thumb_MouseEnter"/>
    </Style>

    <Style x:Key="RowHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="SizeNS"/>
        <Setter Property="Padding" Value="0,3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <EventSetter Event="MouseLeave" Handler="Thumb_MouseLeave"/>
        <EventSetter Event="MouseEnter" Handler="Thumb_MouseEnter1"/>
    </Style>
    <!--end -->

    <Style TargetType="{x:Type DataGrid}">
        <Style.Resources>
            <!--set màu cho nut selected all trên datagrid-->
            <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="#B9B9B9"/>
        </Style.Resources>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="MinRowHeight" Value="22"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="RowBackground" Value="#FFFFFF"/>
        <Setter Property="Background" Value="#FFFFFF"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="#B9B9B9"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <!--<Setter Property="FontSize" Value="11.5"/>-->
        <!--<Setter Property="AlternatingRowBackground" Value="#FFFFEAD2"/> nếu cần màu tươi hơn thì lấy dòng này-->
        <Setter Property="Foreground" Value="#222222"/>
        <Setter Property="HorizontalGridLinesBrush" Value="#B9B9B9"/>
        <Setter Property="VerticalGridLinesBrush" Value="#B9B9B9"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="AlternationCount" Value="2"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="CellStyle">
            <Setter.Value>
                <Style TargetType="{x:Type DataGridCell}">
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="IsTabStop" Value="False"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type DataGridCell}">
                                <ControlTemplate.Resources>
                                    <Storyboard x:Key="SelectOn">
                                        <DoubleAnimation Storyboard.TargetName="recSelect" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="00:00:0.3"/>
                                    </Storyboard>
                                    <Storyboard x:Key="SelectOff">
                                        <DoubleAnimation Storyboard.TargetName="recSelect" Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="00:00:0.3"/>
                                    </Storyboard>
                                </ControlTemplate.Resources>
                                <Grid x:Name="grid" Background="{TemplateBinding Background}">
                                    <Rectangle Name="recSelect" Fill="#F78A09" Opacity="0" StrokeThickness="0"/>
                                    <ContentPresenter x:Name="content" VerticalAlignment="Center" Margin="5,0,0,0" UseLayoutRounding="True">
                                        <!--<ContentPresenter.ContentTemplate>
                                            <DataTemplate>
                                                <TextBlock x:Name="DataGridCellTextBlock" Width="Auto" Height="Auto" Background="Transparent"
                                                           Text="{Binding Text}" TextTrimming="CharacterEllipsis" VerticalAlignment="Center"
                                                           TextWrapping="WrapWithOverflow" TextAlignment="{Binding TextAlignment}"
                                                           Margin="{Binding Margin}"/>
                                            </DataTemplate>
                                        </ContentPresenter.ContentTemplate>-->
                                    </ContentPresenter>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="grid" Property="Background" Value="#F78A09"/>
                                        <!--<Trigger.EnterActions>
                                            <BeginStoryboard Storyboard="{StaticResource SelectOn}"/>
                                        </Trigger.EnterActions>
                                        <Trigger.ExitActions>
                                            <BeginStoryboard Storyboard="{StaticResource SelectOff}"/>
                                        </Trigger.ExitActions>-->
                                        <Setter TargetName="content" Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="Foreground" Value="#FFFFFF"/>
                                    </Trigger>

                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Column.IsSelected, Mode=OneWay}" Value="True">
                                        <Setter Property="Background" Value="#F78A09" />
                                        <Setter TargetName="content" Property="VerticalAlignment" Value="Center"/>
                                    </DataTrigger>

                                    <!--màu của cột khi set thuộc tính FrozenColumnCount-->
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Column.IsFrozen, Mode=OneWay}" Value="True">
                                        <Setter Property="Background" Value="#FFEBEBEB" />
                                    </DataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>

        <!--RowStyle-->
        <Setter Property="RowStyle">
            <Setter.Value>
                <Style TargetType="DataGridRow">
                    <Setter Property="AllowDrop" Value="True" />
                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                        </Trigger>
                        <Trigger Property="AlternationIndex" Value="0">
                            <Setter Property="Background" Value="#FFEDEDED"/>
                        </Trigger>

                        <!--<EventTrigger RoutedEvent="Loaded">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation From="0" To="1" Duration="0:0:1" Storyboard.TargetProperty="Opacity"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>-->
                        <!--
                        khi select sẽ fill màu kín cả row-->
                        <!--<Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#F78A09"/>
                        </Trigger>-->

                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>

        <!--ColumnHeaderStyle-->
        <Setter Property="ColumnHeaderStyle">
            <Setter.Value>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="Background" Value="#FFFFFF"/>
                    <Setter Property="BorderBrush" Value="#B9B9B9"/>
                    <Setter Property="BorderThickness" Value="1,0,1,1"/>
                    <Setter Property="Padding" Value="5,0,5,0"/>
                    <Setter Property="Foreground" Value="#373A3D"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                <Grid Margin="-1,0,0,0" >
                                    <Themes:DataGridHeaderBorder BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                                                                 Background="{TemplateBinding Background}" IsClickable="{TemplateBinding CanUserSort}" 
                                                                 IsPressed="{TemplateBinding IsPressed}" IsHovered="{TemplateBinding IsMouseOver}" Padding="{TemplateBinding Padding}" 
                                                                 SortDirection="{TemplateBinding SortDirection}" SeparatorBrush="{TemplateBinding SeparatorBrush}" 
                                                                 SeparatorVisibility="{TemplateBinding SeparatorVisibility}">
                                        <Grid Height="25" HorizontalAlignment="Center">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <ContentPresenter Name="HeaderContent" Grid.Column="0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                              UseLayoutRounding="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                              Margin="{TemplateBinding Padding}"/>

                                            <Path x:Name="SortArrow" Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Center"                                           
                                                  Width="8" Height="6" Margin="0,0,3,0" Stretch="Fill" Opacity="1" Fill="#FF333435" RenderTransformOrigin="0.5,0.5"
                                                  Visibility="Collapsed" Data="M0,0 L1,0 0.5,1 z" />
                                        </Grid>
                                    </Themes:DataGridHeaderBorder>
                                    <Thumb x:Name="PART_LeftHeaderGripper"  HorizontalAlignment="Left" Style="{DynamicResource ColumnHeaderGripperStyle}" />
                                    <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{DynamicResource ColumnHeaderGripperStyle}"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="SortDirection" Value="Ascending">
                                        <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                                        <Setter TargetName="SortArrow" Property="RenderTransform">
                                            <Setter.Value>
                                                <RotateTransform Angle="180" />
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                    <Trigger Property="SortDirection" Value="Descending">
                                        <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#F0F0F0"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" Value="#B9B9B9"/>
                                        <Setter TargetName="HeaderContent" Property="Margin" Value="1,1,0,0"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Column.IsFrozen, Mode=OneWay}" Value="True">
                            <Setter Property="Background" Value="#FFEBEBEB" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <!--style cho phép headercolumn có thể xuống dòng-->
    <Style x:Key="WrappedColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Background" Value="#FFFFFF"/>
        <Setter Property="Foreground" Value="#373A3D"/>
        <Setter Property="BorderBrush" Value="#B9B9B9"/>
        <Setter Property="BorderThickness" Value="0,0,1,1"/>
        <Setter Property="MaxHeight" Value="65"/>
        <Setter Property="Padding" Value="3,0,3,0"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" TextWrapping="Wrap" Text="{Binding}" TextAlignment="Center"/>

                        <Path x:Name="SortArrow" Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Center"  
                              Width="8" Height="6" Margin="4,0,3,0" Stretch="Fill" Opacity="1" Fill="#FF333435" 
                              RenderTransformOrigin="0.5,0.4" Visibility="Collapsed" Data="M0,0 L1,0 0.5,1 z" />
                    </Grid>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type DataGridColumnHeader}},
                                     Path=Column.SortDirection, Mode=OneWay}" Value="Ascending">
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                            <Setter TargetName="SortArrow" Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180" />
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type DataGridColumnHeader}}, 
                                     Path=SortDirection, Mode=OneWay}" Value="Descending">
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#F0F0F0"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#B9B9B9"/>
                <!--<Setter TargetName="HeaderContent" Property="Margin" Value="1,1,0,0"/>-->
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--end-->

    <!--style cho cell hiển thị dấu "..." khi thu hẹp column-->
    <Style x:Key="TextCell"  TargetType="{x:Type DataGridCell}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="SelectOn">
                            <DoubleAnimation Storyboard.TargetName="recSelect" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="00:00:0.3"/>
                        </Storyboard>
                        <Storyboard x:Key="SelectOff">
                            <DoubleAnimation Storyboard.TargetName="recSelect" Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="00:00:0.3"/>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="grid" Background="{TemplateBinding Background}">
                        <Rectangle Name="recSelect" Fill="#F78A09" Opacity="0" StrokeThickness="0" Stroke="Transparent"/>

                        <ContentPresenter x:Name="content" VerticalAlignment="Center" Margin="5,0,0,0" UseLayoutRounding="True">
                            <ContentPresenter.ContentTemplate>
                                <DataTemplate>
                                    <TextBlock x:Name="DataGridCellTextBlock" Width="Auto" Height="Auto" Background="Transparent"
                                               Text="{Binding Text}" TextTrimming="CharacterEllipsis" VerticalAlignment="Center"
                                               TextWrapping="NoWrap" TextAlignment="{Binding TextAlignment}"
                                               Margin="{Binding Margin}" />
                                </DataTemplate>
                            </ContentPresenter.ContentTemplate>
                        </ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="grid" Property="Background" Value="#F78A09"/>
                            <!--<Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource SelectOn}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource SelectOff}"/>
                            </Trigger.ExitActions>-->
                            <Setter TargetName="content" Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="Foreground" Value="#FFFFFF"/>
                        </Trigger>

                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Column.IsSelected, Mode=OneWay}" Value="True">
                            <Setter Property="Background" Value="#F78A09" />
                            <Setter TargetName="content" Property="VerticalAlignment" Value="Center"/>
                        </DataTrigger>

                        <!--màu của cột khi set thuộc tính FrozenColumnCount-->
                        <!--<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Column.IsFrozen, Mode=OneWay}" Value="True">
                            <Setter Property="Background" Value="#FFEBEBEB" />
                        </DataTrigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--style cho phép nhập text trực tiếp trên cell-->
    <Style x:Key="TextWrapCell" TargetType="{x:Type DataGridCell}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Grid x:Name="grid" Background="{TemplateBinding Background}">
                        <ContentPresenter x:Name="content" VerticalAlignment="Center" Margin="5,0,0,0" UseLayoutRounding="True">
                            <ContentPresenter.ContentTemplate>
                                <DataTemplate>
                                    <TextBlock x:Name="DataGridCellTextBlock" Width="Auto" Height="Auto" Background="Transparent"
                                               Text="{Binding Text}" TextTrimming="CharacterEllipsis" VerticalAlignment="Center"
                                               TextWrapping="Wrap" TextAlignment="{Binding TextAlignment}"
                                               Margin="{Binding Margin}" />
                                </DataTemplate>
                            </ContentPresenter.ContentTemplate>
                        </ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="grid" Property="Background" Value="#F78A09"/>
                            <Setter TargetName="content" Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="Foreground" Value="#FFFFFF"/>
                        </Trigger>

                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Column.IsSelected, Mode=OneWay}" Value="True">
                            <Setter Property="Background" Value="#F78A09" />
                            <Setter TargetName="content" Property="VerticalAlignment" Value="Center"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--row header-->
    <Style TargetType="{x:Type DataGridRowHeader}">
        <Setter Property="BorderBrush" Value="#B9B9B9"/>
        <Setter Property="BorderThickness" Value="0,0,1,1"/>
        <Setter Property="Margin" Value="0,-1,0,0"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="MinWidth" Value="25"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
                    <Grid>
                        <Themes:DataGridHeaderBorder BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                                     Background="{TemplateBinding Background}" IsPressed="{TemplateBinding IsPressed}" 
                                                     IsHovered="{TemplateBinding IsMouseOver}" IsSelected="{TemplateBinding IsRowSelected}" 
                                                     Orientation="Horizontal" Padding="{TemplateBinding Padding}" SeparatorBrush="{TemplateBinding SeparatorBrush}" 
                                                     SeparatorVisibility="{TemplateBinding SeparatorVisibility}">
                            <Grid>
                                <ContentPresenter Name="HeaderContent" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                  HorizontalAlignment="Right" VerticalAlignment="Center" />
                                <!--<Control SnapsToDevicePixels="False" Template="{Binding ValidationErrorTemplate, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}"
                                         Visibility="{Binding (Validation.HasError), RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}"/>-->
                            </Grid>
                        </Themes:DataGridHeaderBorder>
                        <Thumb x:Name="PART_TopHeaderGripper" Style="{StaticResource RowHeaderGripperStyle}" VerticalAlignment="Top"/>
                        <Thumb x:Name="PART_BottomHeaderGripper" Style="{StaticResource RowHeaderGripperStyle}" VerticalAlignment="Bottom"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <!--<Setter Property="Background" Value="#F78A09"/>-->
                            <!--<Setter Property="Background" Value="#B9B9B9"/>-->
                        </Trigger>
                        <Trigger Property="Selector.IsSelected" Value="True">
                            <!--<Setter Property="Background" Value="#F78A09"/>-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--căn giữa cho text trong DataGrid-->
    <Style x:Key="CenterAlignStyle">
        <Setter Property="TextBlock.TextAlignment" Value="Center"/>
        <Setter Property="TextBlock.VerticalAlignment" Value="Center"/>
    </Style>

    <!--căn trái cho text trong DataGrid-->
    <Style x:Key="LeftAlignStyle" >
        <Setter Property="TextBlock.HorizontalAlignment" Value="Left"/>
        <Setter Property="TextBlock.Margin" Value="5,0,0,0"/>
    </Style>

    <!--căn phải cho number trong DataGrid-->
    <Style x:Key="RightAlignStyle" TargetType="TextBlock">
        <Setter Property="TextAlignment" Value="Right"/>
        <Setter Property="Margin" Value="0,0,7,0"/>
    </Style>
    <!--end-->

    <!--can giua cho checkbox trong DataGridCheckboxColumn-->
    <Style x:Key="CenterCheckbox" >
        <Setter Property="CheckBox.VerticalAlignment" Value="Center"/>
        <Setter Property="CheckBox.HorizontalAlignment" Value="Center"/>
        <Setter Property="CheckBox.IsHitTestVisible" Value="False"/>
        <Setter Property="CheckBox.Focusable" Value="False"/>
    </Style>
    <!--end-->

    <!--can giua cho checkbox view trong DataGridCheckboxColumn-->
    <Style x:Key="CenterCheckboxView" >
        <Setter Property="CheckBox.VerticalAlignment" Value="Center"/>
        <Setter Property="CheckBox.HorizontalAlignment" Value="Center"/>
        <Setter Property="CheckBox.IsHitTestVisible" Value="False"/>
        <Setter Property="CheckBox.Focusable" Value="False"/>
        <Setter Property="CheckBox.IsEnabled" Value="True"/>
    </Style>
    <!--end-->
</ResourceDictionary>