<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style TargetType="{x:Type Button}">
        <!--<Setter Property="Height" Value="21"/>-->
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="11.5"/>
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Foreground" Value="#373A3D"/>
        <Setter Property="Background" Value="#FFFFFF"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="MinHeight" Value="21"/>
        <Setter Property="Padding" Value="0,-2,0,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="PressOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                <EasingDoubleKeyFrame KeyTime="0" Value=".5"/>
                            </DoubleAnimationUsingKeyFrames>

                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                                <EasingDoubleKeyFrame KeyTime="0"  Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>

                        <Storyboard x:Key="PressOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>

                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                                <EasingDoubleKeyFrame KeyTime="0"  Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimation Storyboard.TargetName="recHover" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="00:00:0.3"/>
                        </Storyboard>
                        
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimation Storyboard.TargetName="recHover" Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="00:00:0.3"/>
                        </Storyboard>
                        
                        <Storyboard x:Key="FocusOn">
                            <DoubleAnimation Storyboard.TargetName="recFocus" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="00:00:0.3"/>
                        </Storyboard>

                        <Storyboard x:Key="FocusOff">
                            <DoubleAnimation Storyboard.TargetName="recFocus" Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="00:00:0.3"/>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Rectangle Name="rec" Stroke="#FFA7A7A7" StrokeThickness="1" Fill="{TemplateBinding Background}" 
                                   Height="21" Width="{TemplateBinding Width}" UseLayoutRounding="True" Opacity="1"/>
                        <Rectangle Name="recHover" Stroke="Transparent" StrokeThickness="1" Fill="#B9B9B9" 
                                   Height="21" Width="{TemplateBinding Width}" UseLayoutRounding="True" Opacity="0"/>
                        <Rectangle Name="recFocus" Stroke="#F78A09" StrokeThickness="1" Fill="Transparent" 
                                   Height="21" Width="{TemplateBinding Width}" UseLayoutRounding="True" Opacity="0"/>

                        <ContentPresenter x:Name="contentPresenter" ContentSource="Content" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" UseLayoutRounding="True"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          Margin="{TemplateBinding Padding}" RecognizesAccessKey="True">
                            <ContentPresenter.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </ContentPresenter.RenderTransform>
                        </ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <!--<Setter TargetName="rec" Property="Fill" Value="#B9B9B9"/>-->
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}"/>
                            </Trigger.ExitActions>
                            <Setter Property="Foreground" Value="#373A3D"/>
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <!--<Setter TargetName="rec" Property="Stroke" Value="#F78A09"/>-->
                            <!--<Setter Property="FontWeight" Value="SemiBold"/>-->
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource FocusOn}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource FocusOff}"/>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#888"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource PressOn}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource PressOff}"/>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--<Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
        </Style.Triggers>-->
    </Style>
    
    <!--style cùi bên index-->
    <Style x:Key="Button45" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Width" Value="45"/>
    </Style>

    <Style x:Key="Button30" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Width" Value="30"/>
    </Style>

    <Style x:Key="Button90" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Width" Value="90"/>
    </Style>

    <Style x:Key="Delete_Operator" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="PressOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Delete" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>

                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Delete" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                                <EasingDoubleKeyFrame KeyTime="0"  Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>

                        <Storyboard x:Key="PressOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Delete" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                <EasingDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>

                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Delete" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                                <EasingDoubleKeyFrame KeyTime="00:00:00.3000000"  Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid Width="18" Height="18">
                        <Border Name="border_delete" BorderBrush="Transparent" BorderThickness="0,0,1,1" CornerRadius="1" Width="18" Height="18"/>
                        <Image x:Name="Delete" Source="/NangShop;component/Themes/Images/Delete.png" >
                            <Image.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Image.RenderTransform>
                        </Image>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border_delete" Property="BorderBrush" Value="Gray"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border_delete" Property="BorderBrush" Value="Transparent"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource PressOn}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource PressOff}"/>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>