<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    <!--Style cho nut o form Login va Lock-->

    <LinearGradientBrush x:Key="Background_Lockin" EndPoint="1,0.5" StartPoint="0,0.5">
        <GradientStop Color="#FF9E9E9E"/>
        <GradientStop Color="#FFF0F0F0" Offset="1"/>
    </LinearGradientBrush>

    <Style x:Key="btnLogin" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="50"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ON" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="OFF" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:01" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>

                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ON" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:01" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="OFF" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>

                        <Storyboard x:Key="PressOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ON" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>

                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ON" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                                <EasingDoubleKeyFrame KeyTime="0"  Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>

                        <Storyboard x:Key="PressOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ON" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>

                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ON" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                                <EasingDoubleKeyFrame KeyTime="0"  Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>

                    <Grid  Height="25" Width="46">
                        <Rectangle x:Name="Rectangle_Lockin" RadiusX="1" RadiusY="1" Fill="Black" Margin="0" Stroke="Black" StrokeThickness="1"/>
                        <Image x:Name="OFF" Source ="/NangShop;component/Images/bg_button.png" HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="1" Margin="1"/>
                        <Image x:Name="ON" Source="/NangShop;component/Images/bg_button_on.png" HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="0" Margin="1">
                            <Image.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Image.RenderTransform>
                        </Image>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand"/>
                            <Setter TargetName="Rectangle_Lockin" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="0" BlurRadius="10" Direction="0" Color="White" Opacity="1" />
                                </Setter.Value>
                            </Setter>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}"/>
                            </Trigger.ExitActions>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource PressOn}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource PressOff}"/>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--===================================================================================================-->
    <Style x:Key="btnConfirm" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="20"/>
        <Setter Property="Width" Value="50"/>
    </Style>

    <!--===================================================================================================-->

    <LinearGradientBrush x:Key="BG2" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFA7A7A7"/>
        <GradientStop Color="#FFEBEBEB" Offset="1"/>
    </LinearGradientBrush>

    <!--button close-->
    <Style x:Key="btnClose" TargetType="{x:Type Button}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="15" Color="#FFFF3535" ShadowDepth="0" Opacity="1"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="15" Color="#FF910000" ShadowDepth="0" Opacity="1"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <!-- màu nền-->
                        <Ellipse Fill="{TemplateBinding Background}"/>
                        <!-- Refraction Layer tạo độ bóng cho button trên lớp này -->
                        <Rectangle x:Name="RefractionLayer">
                            <Rectangle.Fill>
                                <ImageBrush ImageSource="/NangShop;component/Images/exit.png"/>
                            </Rectangle.Fill>
                        </Rectangle>

                        <!-- ContentPresenter -->
                        <ContentPresenter Margin="0,2,0,0" HorizontalAlignment="Center" VerticalAlignment="Center"/>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- giu nguyen anh cua btn khi di chuot vao btn-->
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="RefractionLayer" Property="Fill">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/NangShop;component/Images/exit.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--nut trong combobox cua form stockinfo_display-->
    <Style x:Key="btnArrow" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="15"/>
        <Setter Property="Width" Value="21"/>
        <Setter Property="Template" Value="{DynamicResource btnArrowTemp}"/>
    </Style>

    <ControlTemplate x:Key="btnArrowTemp" TargetType="{x:Type Button}">
        <BulletDecorator HorizontalAlignment="Center" VerticalAlignment="Center">
            <BulletDecorator.Bullet>
                <Grid>
                    <Rectangle Name="rectangle" Width="21" Height="23" RadiusX="2" RadiusY="2">
                        <Rectangle.Fill>
                            <SolidColorBrush Color="#FF727272"/>
                        </Rectangle.Fill>
                    </Rectangle>
                    <Path Visibility="Visible" Width="7" Height="7" x:Name="Arrow" SnapsToDevicePixels="False"
                                          StrokeThickness="1" Data="M 0 0 L 3.5 6 L 7 0 Z" HorizontalAlignment="Center"
                                          VerticalAlignment="Center">
                        <Path.Fill>
                            <SolidColorBrush Color="#FF00AD00"/>
                        </Path.Fill>
                    </Path>
                </Grid>
            </BulletDecorator.Bullet>
        </BulletDecorator>

        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Arrow" Property="Fill" Value="#FFD03434"/>
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="Arrow" Property="Fill" Value="#FFA32626"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--===================================================================================================-->


    <Style x:Key="Close" TargetType="{x:Type Button}">
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="/NangShop;component/Images/close.png"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!--passwordbox form lock va login-->
    <Style x:Key="Login_PasswordBox" TargetType="{x:Type PasswordBox}">
        <!--<Setter Property="PasswordChar" Value="*"/>-->
        <Setter Property="Foreground" Value="#FFCCCCCC"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
    </Style>

    <!--textbox form login-->
    <Style x:Key="Test" TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="#FFCCCCCC"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Label HorizontalAlignment="Left" VerticalAlignment="Center" Padding="4,0,0,0" Foreground="Gray" FontStyle="Italic"
                               Content="{TemplateBinding Tag}" x:Name="lbl" Opacity="0"/>
                        <ScrollViewer Margin="3,0,0,0" x:Name="PART_ContentHost" Foreground="#FFCCCCCC" UseLayoutRounding="True"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Text" Value="">
                            <Setter TargetName="lbl" Property="Opacity" Value="1"/>
                        </Trigger>
                        <Trigger Property="Text" Value="{x:Null}">
                            <Setter TargetName="lbl" Property="Opacity" Value="1"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--====================================button image=========================================================================-->
    <Style x:Key="ButtonImage" TargetType="{x:Type Button}">
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <BulletDecorator HorizontalAlignment="Center" VerticalAlignment="Center">
                        <BulletDecorator.Bullet>
                            <Grid>
                                <Rectangle Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Fill="{TemplateBinding Background}"/>

                                <Path Visibility="Hidden" Width="25" Height="25" x:Name="xClose" 
                                          SnapsToDevicePixels="False"
                                          StrokeThickness="5"
                                          Data="M 0 0 L 25 25 M 0 25 L 25 0">
                                    <Path.Stroke>
                                        <SolidColorBrush Color="#FFFF2121"/>
                                    </Path.Stroke>
                                </Path>
                            </Grid>
                        </BulletDecorator.Bullet>
                    </BulletDecorator>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="xClose" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--=========================================end button image====================================================================-->

    <!--label form plash-->
    <Style x:Key="Labellogin" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="#FF222222"/>
    </Style>

    <!--==================================================================-->
    <!--radiobutton cho frmIndexInfo_Create-->
    <Color x:Key="MainColor">#FF595959</Color>
    <Color x:Key="HoverColor">#FF393939</Color>

    <SolidColorBrush x:Key="NormalBrush" Color="{StaticResource MainColor}" />
    <SolidColorBrush x:Key="NormalBorderBrush" Color="#FF333333" />
    <SolidColorBrush x:Key="HoverBrush" Color="{StaticResource HoverColor}" />

    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
    <!--#888-->
    <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="Black" />
    <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />


    <LinearGradientBrush x:Key="ShineBrush" EndPoint="0.5,0.971" StartPoint="0.5,0.042">
        <GradientStop Color="#59FFFFFF" Offset="0" />
        <GradientStop Color="#00FFFFFF" Offset="1" />
        <GradientStop Color="#26FFFFFF" Offset="0.467" />
        <GradientStop Color="#00FFFFFF" Offset="0.475" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="HoverShineBrush" EndPoint="0.5,0.971" StartPoint="0.5,0.042">
        <GradientStop Color="#4CFFFFFF" Offset="0" />
        <GradientStop Color="#26FFFFFF" Offset="1" />
        <GradientStop Color="#26FFFFFF" Offset="0.467" />
        <GradientStop Color="#00FFFFFF" Offset="0.475" />
        <GradientStop Color="#00FFFFFF" Offset="0.856" />
    </LinearGradientBrush>

    <Style x:Key="RadioButtonFocusVisual" TargetType="{x:Type RadioButton}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="15,0,0,0" Stroke="WhiteSmoke" StrokeThickness="1" StrokeDashArray="1 2" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type RadioButton}" x:Key="RadioButton_Index">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{DynamicResource RadioButtonFocusVisual}" />
        <Setter Property="Background" Value="{DynamicResource NormalBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="Template" Value="{DynamicResource RadioButtonTemp_Index}" />
    </Style>

    <ControlTemplate x:Key="RadioButtonTemp_Index" TargetType="{x:Type RadioButton}">
        <ControlTemplate.Resources>
            <Storyboard x:Key="PressedOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedEllipse" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>

            <Storyboard x:Key="PressedOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedEllipse" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>

            <Storyboard x:Key="CheckedOn">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CheckIcon" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>

            <Storyboard x:Key="CheckedOff">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CheckIcon" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>

            <Storyboard x:Key="FocussedOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ContentFocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>

            <Storyboard x:Key="FocussedOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ContentFocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>

        <BulletDecorator Background="Transparent" x:Name="bulletDecorator">
            <BulletDecorator.Bullet>
                <Grid Width="16" Height="16">
                    <Ellipse Height="14" Margin="1" x:Name="Background" Width="14" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" />
                    <Ellipse Height="14" Margin="1" x:Name="BackgroundOverlay" Width="14" StrokeThickness="2" Stroke="{StaticResource HoverBrush}" Opacity="0" />
                    <Ellipse Height="14" Margin="1" x:Name="PressedEllipse" Width="14" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource HoverBrush}" Opacity="0" />
                    <Ellipse Height="6" x:Name="CheckIcon" Width="6" Opacity="0" Fill="Red" />
                    <Ellipse Height="14" x:Name="DisabledVisualElement" Width="14" Opacity="0" Fill="{StaticResource DisabledBackgroundBrush}" />
                    <Ellipse Height="16" x:Name="ContentFocusVisualElement" Width="16" IsHitTestVisible="false" Opacity="0" Stroke="{StaticResource HoverShineBrush}" StrokeThickness="1" />
                    <Ellipse Height="12" Margin="2,2,2,2" x:Name="ShineEllipse" Width="12" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{x:Null}" Fill="{StaticResource ShineBrush}" />
                </Grid>
            </BulletDecorator.Bullet>
            <ContentPresenter RecognizesAccessKey="True" Margin="5,0,0,0" />
        </BulletDecorator>
        <ControlTemplate.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource FocussedOff}" x:Name="FocussedOff_BeginStoryboard" />
                </Trigger.ExitActions>

                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource FocussedOn}" x:Name="FocussedOn_BeginStoryboard" />
                </Trigger.EnterActions>
            </Trigger>

            <Trigger Property="IsChecked" Value="false">
                <Trigger.ExitActions>
                    <BeginStoryboard x:Name="CheckedOn_BeginStoryboard" Storyboard="{StaticResource CheckedOn}" />
                </Trigger.ExitActions>

                <Trigger.EnterActions>
                    <BeginStoryboard x:Name="CheckedOff_BeginStoryboard" Storyboard="{StaticResource CheckedOff}" />
                </Trigger.EnterActions>
            </Trigger>

            <Trigger Property="IsChecked" Value="True" />



            <Trigger Property="IsPressed" Value="true">
                <Trigger.ExitActions>
                    <BeginStoryboard x:Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}" />
                </Trigger.ExitActions>

                <Trigger.EnterActions>
                    <BeginStoryboard x:Name="PressedOn_BeginStoryboard" Storyboard="{StaticResource PressedOn}" />
                </Trigger.EnterActions>
            </Trigger>

            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Fill" TargetName="Background" Value="{DynamicResource DisabledBackgroundBrush}" />
                <Setter Property="Stroke" TargetName="Background" Value="{DynamicResource DisabledBorderBrush}" />
                <Setter Property="Opacity" TargetName="bulletDecorator" Value="1" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

</ResourceDictionary>